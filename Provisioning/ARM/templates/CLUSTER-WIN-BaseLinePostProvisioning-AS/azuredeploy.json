{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "name": "Update Cluster Windows VM Deployment",
        "summary": "Add Windows VM to an existing Availability Set Deployment",
        "description": [
            "This template will create one or more new Windows vm to an existing Availability set, based on a parameter file, with the following features:",
            "1. Dedicate storage for Boot Diagnostics",
            "2. Network Accelerate",
            "3. Static IP Address for Network Interface",
            "4. Data Disk",
            "5. Availability Set",
            "6. Custom Script Extension"
        ]
    },
    "parameters": {
        "Cluster": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "Select whether the VM should be in production or not."
            }
        },
        "VMName": {
            "type": "array",
            "metadata": {
                "description": "Virtual Machine Name, for more than 1 vm use brackets and quotation marks "
            }
        },
        "existingCustomScriptStorageAccountName": {
            "type": "string",
            "metadata": {
                "description": "Name of the storage account."
            }
        },
        "existingvirtualNetworkName": {
            "type": "string",
            "allowedValues": [
                "avnetyeceu1aut01",
                "avnetyeceu1dec01",
                "avnetyeceu1uat01",
                "avnetyeceu1prd01",
                "avnetyeceu1hub01",
                "avnetybospkeastusprd01",
                "avnetybospkeastusdec01",
                "avnetybospkeastusuat01",
                "avnetycospkeastusprd01",
                "avnetycospkeastusdec01",
                "avnetycospkeastusuat01"
            ],
            "metadata": {
                "description": "An existing virtual network  where the vm's will be allocated."
            }
        },
        "existingsubnetName": {
            "type": "string",
            "allowedValues": [
                "web",
                "app",
                "data",
                "asnetwebprd01",
                "asnetdatprd01",
                "asnetappprd01",
                "asnetwebuat01",
                "asnetdatuat01",
                "asnetappuat01"
            ],
            "metadata": {
                "description": "Name of an existing subnet to allocate vm ip address."
            }
        },
        "existingVirtualNetworkresourcegroup": {
            "type": "string",
            "metadata": {
                "description": "Resource group name, which contains an existing virtual network  where the vm's will be deployed"
            }
        },
        "existingCustomScriptStorageAccountResourcegroup": {
            "type": "string",
            "metadata": {
                "description": "Resource Group Name, which contains the Storage account used for CustomScript."
            }
        },
        "networkaccelerate": {
            "type": "string",
            "defaultValue": true,
            "metadata": {
                "description": "Enable / Disable Network Accelerate for Network Interface."
            }
        },
        "existingBootDiagnostic": {
            "type": "string",
            "metadata": {
                "description": "The name of an existing storage account to which diagnostics data is transfered."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "imageSKU": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "allowedValues": [
                "2012-R2-Datacenter",
                "2016-Datacenter",
                "2019-Datacenter"
            ],
            "metadata": {
                "description": "Image SKU"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1ls",
            "allowedValues": [
                "Standard_D2as_v5",
                "Standard_B1s",
                "Standard_DS2_v2",
                "Standard_D8s_v4",
                "Standard_D8s_v5",
                "Standard_D4as_v4",
                "Standard_DS15_v2",
                "Standard_D16as_v4",
                "Standard_E4s_v5",
                "Standard_F2s_v2",
                "Standard_F4s_v2",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2"
            ],
            "metadata": {
                "description": "List of current vm sizes, to add a new vm size modify this template "
            }
        },
        "DataDiskSize": {
            "type": "int",
            "defaultValue": 32,
            "allowedValues": [
                32,
                64,
                128,
                256,
                512,
                1024
            ],
            "metadata": {
                "description": "Size for Data Disk"
            }
        },
        "nicDeleteOption": {
            "type": "string",
            "defaultValue": "Delete",
            "metadata": {
                "description": "Switch between detach or delete to specify nic behavior when the vm be deleted"
            }
        },
        "OSdiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Standard_LRS",
                "StandardSSD_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Disk Type for Operating System Disk"
            }
        },
        "DatadiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Standard_LRS",
                "StandardSSD_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "Disk Type for Data Disk"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources. If no location is specified, the resource group deployment location  will used "
            }
        },
        "AvailabilitySetName": {
            "type": "string",
            "defaultValue": "MyAvailabilitySet",
            "metadata": {
                "description": "Select an existing availability"
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "Password credential  for the Virtual Machine administrator."
            }
        },

        "customScriptURI": {
            "type": "string",
            "metadata": {
                "description": "Blob Storage URI for custom script extension"
            }
        },
        "domainToJoin": {
            "type": "string",
            "metadata": {
                "description": "FQDN of the AD domain to join"
            },
            "defaultValue": "contoso.com"
        },
        "ouToJoin": {
            "type": "string",
            "metadata": {
                "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com'. This value can be empty"
            },
            "defaultValue": ""
        },
        "domainJoinOptions": {
            "type": "int",
            "metadata": {
                "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
            },
            "defaultValue": 3
        },
        "domainUserName": {
            "type": "string",
            "metadata": {
                "description": "Username of the domain account to be used for joining the domain"
            },
            "defaultValue": "kndadmin"
        },
        "domainPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password of the domain account to be used for joining the domain"
            },
            "defaultValue": "[concat('Subscription#',subscription().subscriptionId)]"
        }
    },

    "variables": {
        //"availabilitySetID": "[resourceId('Microsoft.Compute/availabilitySets/',parameters('AvailabilitySetName'))]",
        "availabilitySetID": {
            "id": "[resourceId('Microsoft.Compute/AvailabilitySets',parameters('AvailabilitySetName'))]"
        },
        "availabilitySet": "[if(equals(parameters('Cluster'), 'Yes'), variables('availabilitySetId'), json('null'))]",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "accountid": "[resourceId(parameters('existingCustomScriptStorageAccountResourcegroup'),'Microsoft.Storage/storageAccounts/', parameters('existingCustomScriptStorageAccountName'))]",
        "scriptFileName": "New-AzVMPostDeployment.ps1",
        "vmExtensionName": "JsonADDomainExtension",
        "vmExtensionName2": "PSCustomScript",
        "nicNameprefix": "aznic",
        "vnetId": "[resourceId(parameters('existingVirtualNetworkresourcegroup'),'Microsoft.Network/virtualNetworks/', parameters('existingvirtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('existingsubnetName'))]",
        "blobStorageEndpoint": "blob.core.windows.net"
    },
    "resources": [
        {
            "apiVersion": "2020-11-01",
            "name": "[toLower(concat(variables('nicNameprefix'),parameters('VMName')[copyIndex()]))]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('location')]",
            "tags": {
                "parent": "[parameters('VMName')[copyindex()]]"
            },
            "copy": {
                "name": "nicLoop",
                "count": "[length(parameters('VMName'))]"
            },
            "dependsOn": [
            ],
            "properties": {
                "enableAcceleratedNetworking": "[parameters('networkaccelerate')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2021-11-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmName')[copyIndex()])]",
            "location": "[parameters('location')]",
            "tags": {
                "parent": "[parameters('VMName')[copyindex()]]"
            },
            "copy": {
                "name": "SrvMachineLoop",
                "count": "[length(parameters('VMName'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNameprefix'),parameters('VMName')[copyIndex()]))]"
            ],
            "properties": {
                "availabilitySet": "[variables('availabilitySet')]",
                "licenseType": "Windows_Server",
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmName')[copyIndex()])]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('vmName')[copyIndex()],'_OSDisk')]",
                        "managedDisk": { "storageAccountType": "[parameters('OSdiskType')]" },
                        "caching": "ReadWrite",
                        "createOption": "FromImage",
                        "deleteOption": "Delete"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(parameters('vmName')[copyIndex()],'_DataDisk_','0')]",
                            "managedDisk": {
                                "storageAccountType": "[parameters('DatadiskType')]"
                            },
                            "diskSizeGB": "[parameters('DataDiskSize')]",
                            "lun": 0,
                            "deleteOption": "Delete",
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', toLower(concat(variables('nicNameprefix'),parameters('VMName')[copyIndex()])))]",
                            "properties": {
                                "deleteOption": "[parameters('nicDeleteOption')]"
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('http://',parameters('existingBootDiagnostic'),'.',variables('blobStorageEndpoint'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "[concat('StaticIp', copyIndex())]",
            "dependsOn": [
                "nicLoop"
            ],
            "copy": {
                "name": "ipLoop",
                "count": "[length(parameters('VMName'))]"
            },
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Network/networkInterfaces",
                            "name": "[toLower(concat(variables('nicNameprefix'),parameters('VMName')[copyIndex()]))]",
                            "apiVersion": "2020-04-01",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAllocationMethod": "Static",
                                            "privateIPAddress": "[reference(toLower(concat(variables('nicNameprefix'),parameters('VMName')[copyIndex()]))).ipConfigurations[0].properties.privateIPAddress]",
                                            "subnet": {
                                                "id": "[variables('subnetRef')]"
                                            }
                                        }
                                    }
                                ],
                                "enableAcceleratedNetworking": true
                            }
                        }
                    ]
                }
            }
        },
        {
            "apiVersion": "2020-12-01",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('VMName')[copyindex()],'/', variables('vmExtensionName2'))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "CustomScriptExtensionLoop",
                "count": "[length(parameters('VMName'))]"
            },
            "dependsOn": [
                "SrvMachineLoop"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.10",
                "autoUpgradeMinorVersion": true,
                "settings": {},
                "protectedSettings": {
                    "fileUris": [ "[parameters('customScriptURI')]" ],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFileName'))]",
                    "storageAccountName": "[parameters('existingCustomScriptStorageAccountName')]",
                    "storageAccountKey": "[listKeys(variables('accountid'),'2021-01-01').keys[0].value]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-11-01",
            "name": "[concat(parameters('vmName')[copyIndex()],'/', variables('vmExtensionName'))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "CustomScriptExtensionLoop"
                //"[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "copy": {
                "name": "extensionloop",
                "count": "[length(parameters('VMName'))]"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Name": "[parameters('domainToJoin')]",
                    "OUPath": "[parameters('ouToJoin')]",
                    "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUserName'))]",
                    "Restart": "true",
                    "Options": "[parameters('domainJoinOptions')]"
                },
                "protectedsettings": {
                    "Password": "[parameters('domainPassword')]"
                }
            }
        }
    ],
    "outputs": {
    }
}

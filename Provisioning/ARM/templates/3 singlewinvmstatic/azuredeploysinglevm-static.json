{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "name": "Single Windows VM Deployment",
        "summary": "Create a Windows Stand Alone Single VM",
        "description": [
            "This template deploy a Windows vm based on a parameter file, with the following features:",
            "1. Boot Diagnostics",
            "2. Network Accelerate",
            "3. Data Disk"
        ]
    },
    "parameters": {   
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://raw.github.kyndryl.net/GTS-Cloud-Peru/AzurePublic/Gonzalo/Provisioning/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access baseURL.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        },           
        "VMName": {
            "type": "string",
            "metadata": {
                "description": "Virtual Machine Name"
            }
        },
        "existingvirtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Existing VNet to which the VM will connect."
            }
        },
        "existingresourcegroupVirtualNetwork": {
            "type": "string",
            "metadata": {
                "description": "Resource Group Name for Existing VNet to which the VM will connect."
            }
        },
        "existingsubnetName": {
            "type": "string",
            "metadata": {
                "description": "Existing Subnet to which the VM will connect."
            }
        },
        "existingBootDiagnostic": {
            "type": "string",
            "metadata": {
                "description": "The name of an existing storage account for boot diagnostic use."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "User name for the Virtual Machine."
            }
        },
        "imageSKU": {
            "type": "string",
            "defaultValue": "2019-Datacenter",
            "allowedValues": [
                "2012-R2-Datacenter",
                "2016-Datacenter",
                "2019-Datacenter"
            ],
            "metadata": {
                "description": "Image SKU which are tested with this ARM Template"
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "Size of the virtual machine"
            },
            "defaultValue": "Standard_F2s_v2"
        },
        "NumbOfInstances": {
            "type": "int",
            "metadata": {
                "description": "Number of  Server Instances that are required"
            },
            "allowedValues": [
                1,
                2
            ],
            "defaultValue": 1
        },
        "diskType": {
            "type": "string",
            "allowedValues": [
                "Standard_LRS",
                "StandardSSD_LRS",
                "Premium_LRS"
            ],
            "metadata": {
                "description": "The type of the Storage Account"
            },
            "defaultValue": "Standard_SSDLRS"
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources. By default the vm is deployed in the same location as the resource group"
            }
        },
        "networkaccelerate": {
            "type": "string",
            "defaultValue": true,
            "metadata": {
                "description": "Enable / Disable Network Accelerate for Network Interface"
            }
        },
        "DataDiskSize": {
            "type": "int",
            "defaultValue": 128,
            "metadata": {
                "description": "The size for the first data disk"
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended for Linux vm's."
            }
        }
    },
    "variables": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "nicName": "[tolower(concat('aznic', parameters('VMName')))]",
        "subnetRef": "[resourceId(parameters('existingresourcegroupVirtualNetwork'),'Microsoft.Network/virtualNetworks/subnets', parameters('existingvirtualNetworkName'), parameters('existingsubnetName'))]",
        "blobStorageEndpoint": "blob.core.windows.net",
        "updateip_templateUri": "[uri(parameters('_artifactsLocation'), concat('ARM/templates/3%20singlewinvmstatic/nested/update-nic.json?token=AAACOS4EB6HLQ3P42VKE6ILB5EVMA', parameters('_artifactsLocationSasToken')))]"     
    },

    "resources": [
        {
            "apiVersion": "2020-05-01",
            "name": "[concat(variables('nicName'),copyIndex(1))]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('location')]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('NumbOfInstances')]"
            },
            "dependsOn": [

            ],
            "properties": {
                "enableAcceleratedNetworking": "[parameters('networkaccelerate')]",
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-12-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmName'))]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "SrvMachineLoop",
                "count": "[parameters('NumbOfInstances')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),copyIndex(1)))]"
            ],
            "properties": {

                "licenseType": "Windows_Server",
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmName'))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSKU')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('vmName'), '_OSDisk')]",
                        "managedDisk": { "storageAccountType": "StandardSSD_LRS" },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(parameters('vmName'),'_DataDisk_',copyIndex())]",
                            "managedDisk": {
                                "storageAccountType": "[parameters('diskType')]"
                            },
                            "diskSizeGB": "[parameters('DataDiskSize')]",
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),copyIndex(1)))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('http://',parameters('existingBootDiagnostic'),'.',variables('blobStorageEndpoint'))]"
                    }
                }
            }
        },
        //Linked template: update-nic
        {
            "type": "Microsoft.Resources/deployments",
            "name": "updateIp",
            "apiVersion": "2020-06-01",
            "dependsOn": [
           //     "[variables('nicName')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('updateip_templateUri')]",
                    //"relativepath": "./nested/update-nic.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nicName": {
                        "value": "[variables('nicName')]"
                    },
                    "SubnetRef": {
                        "value": "[variables('SubnetRef')]"
                    },
                    "privateIp": {
                        "value": "[reference(resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'),1))).ipConfigurations[0].properties.privateIPAddress]"
                    },
                    "location":{
                        "value": "[parameters('location')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "hostname": {
            "type": "string",
            "value": "[parameters('VMName')]"
        }
        //"PrivateIp": {
        //    "type": "string",
        //    "value": "[reference('PrivateIp').outputs.PrivateIpAddr.value]"
        //}        
    }
}
